# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "feature/pipeline" ]
  pull_request:
    branches: [ "feature/pipeline" ]

jobs:
  frontend-build: 

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - run: cd frontend && yarn && yarn build
    - name: artifact
      uses: actions/upload-artifact@v3
      with:
        name: upload frontend files
        path: |
          ./frontend/build
  
  create-virtualenv:
    
    runs-on: ubuntu-latest
    steps:
    - run: cd backend
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v2
    - uses: syphar/restore-virtualenv@v1
      id: cache-virtualenv

    - uses: syphar/restore-pip-download-cache@v1
      if: steps.cache-virtualenv.outputs.cache-hit != 'true'

    - run: pip install -r requirements.txt
      if: steps.cache-virtualenv.outputs.cache-hit != 'true'

  linter:
    needs: create-virtualenv
    runs-on: ubuntu-latest
    steps:
    - run: cd backend
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v2
    - uses: syphar/restore-virtualenv@v1
      id: cache-virtualenv

    - run: flake8
    - run: pydocstyle
    - run: isort . --diff --check-only
    - run: black --check --diff .

  tests:
    needs: create-virtualenv
    runs-on: ubuntu-latest
    steps:
    - run: cd backend
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v2
    - uses: syphar/restore-virtualenv@v1
      id: cache-virtualenv

    - run: py.test
